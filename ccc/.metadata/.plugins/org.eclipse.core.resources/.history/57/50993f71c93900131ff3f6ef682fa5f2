# -*- encoding: utf-8 -*-

require '.\PageInfo'

#= Web ページのソースから、必要項目の抽出をおこなう
#
# 抽出結果は PageInfo のインスタンスに格納し，それを返す
#
#== 必要項目
#- タイトル
#- 文字コード
#- 本文
class PageScraper
  # 必要項目の抽出を行う
  def scrape(page)
    page_info = PageInfo.new
    puts "スクレイプ開始"

    page_info.url = page.url.to_s
    puts "URL\t [#{page_info.url}]"

    page_info.title = scrape_title(page)
    puts "Title\t [#{page_info.title}]"

    page_info.charset = page.content_type.to_s
    puts "Content type\t [#{page_info.charset}]"

    page_info.body = extract_text(page.doc)

    puts "titile, charset スクレイプ終了"
    return page_info
  end

  # Web ページソースからタイトルを抽出
  def scrape_title(page)
    page.doc.xpath("//title/text()").first.to_s if page.doc
  end

  # HTML ソースから tag の除去を行う
  def extract_text(e)
    if e.is_a? Nokogiri::XML::Text
      return e.text
    end

    e.children.inject(String.new) { |text, child|
      text << extract_text(child)
      text
    }
  end

end